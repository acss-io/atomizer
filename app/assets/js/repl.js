/* global gtag */

import CodeMirror from 'codemirror';
import 'codemirror/mode/xml/xml.js';
import 'codemirror/mode/css/css.js';
import 'codemirror/mode/javascript/javascript.js';
import Atomizer from 'atomizer';
import JSZip from 'jszip';
import { saveAs } from 'file-saver';

const markup = document.getElementById('markup');
const markupEditor = CodeMirror.fromTextArea(markup, {
    htmlMode: true,
    indentUnit: 4,
    lineWrapping: true,
    mode : 'xml',
    theme: 'material-darker'
});
markupEditor.setSize('100%', '100%');

const css = document.getElementById('css');
const cssEditor = CodeMirror.fromTextArea(css, {
    indentUnit: 4,
    lineWrapping: true,
    mode: 'css',
    readOnly: true,
    theme: 'material-darker',
});
cssEditor.setSize('100%', '100%');

const config = document.getElementById('config');
const configEditor = CodeMirror.fromTextArea(config, {
    indentUnit: 4,
    lineWrapping: true,
    mode: 'javascript',
    theme: 'material-darker',
});
configEditor.setSize('100%', '100%');

function updatePreview() {
    // get css from atomizer
    const atomizer = new Atomizer();
    const config = JSON.parse(configEditor.getValue());
    const foundClasses = atomizer.findClassNames(markupEditor.getValue());
    const finalConfig = atomizer.getConfig(foundClasses, config);
    const acss = atomizer.getCss(finalConfig);

    // save it in the css editor
    cssEditor.setValue(`/** Generated Atomic CSS */\n${acss}`);
    cssEditor.save();

    // update the iframe preview
    const preview = document.getElementById('preview');
    preview.contentDocument.head.innerHTML = `<style>h1 { margin: 0; padding: 0 }${cssEditor.getValue()}</style>`;
    preview.contentDocument.body.innerHTML = markupEditor.getValue();
}

async function createZip() {
    const zip = new JSZip();

    const readme = `# Atomic CSS

Here are the files from your Atomizer REPL session:

- **css/atomizer.css**: the final CSS generated by Atomizer
- **index.html**: the HTML you entered

Open \`index.html\` in your browser to see your page.

`;

    const page = `<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Atomizer REPL</title>
        <link rel="stylesheet" href="css/atomizer.css">
    </head>
    <body>
        ${markupEditor.getValue()}
    </body>
</html>
`;

    zip.file('README.md', readme);
    zip.file('index.html', page);
    zip.file('css/atomizer.css', cssEditor.getValue());
    
    const content = await zip.generateAsync({ type: 'blob' });
    saveAs(content, 'atomizer.zip');

    if (typeof gtag !== 'undefined') {
        gtag?.('event', 'repl_download');
    }
}

function toggleFullScreen() {
    const header = document.getElementById('header');
    const fullscreen = document.getElementById('fullscreen');
    const fullscreenClass = 'fs-on';
    fullscreen.classList.toggle(fullscreenClass);
    header.hidden = !header.hidden;

    if (typeof gtag !== 'undefined') {
        const mode = fullscreen.classList.contains(fullscreenClass) ? 'open' : 'closed';
        gtag?.('event', 'repl_fullscreen', { mode });
    }
}

// populate preview iframe with initial markup
updatePreview();

// attach listeners
markupEditor.on('change', updatePreview);
configEditor.on('change', updatePreview);
document.getElementById('save').addEventListener('click', createZip);
document.getElementById('fullscreen').addEventListener('click', toggleFullScreen);
